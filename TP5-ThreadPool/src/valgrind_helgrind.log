==3981004== Helgrind, a thread error detector
==3981004== Copyright (C) 2007-2017, and GNU GPL'd, by OpenWorks LLP et al.
==3981004== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info
==3981004== Command: ./threadpool --all
==3981004== 
[36m[B01][0m Basic execution (3 tasks on 2 threads)... ==3981005== 
==3981005== Use --history-level=approx or =none to gain increased speed, at
==3981005== the cost of reduced accuracy of conflicting-access information
==3981005== For lists of detected and suppressed errors, rerun with: -s
==3981005== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 107 from 16)
[1;32m‚úÖ PASSED[0m
[36m[B02][0m Wait without scheduling... ==3981008== 
==3981008== Use --history-level=approx or =none to gain increased speed, at
==3981008== the cost of reduced accuracy of conflicting-access information
==3981008== For lists of detected and suppressed errors, rerun with: -s
==3981008== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 87 from 13)
[1;32m‚úÖ PASSED[0m
[36m[B03][0m Serial execution with 1 thread... ==3981013== 
==3981013== Use --history-level=approx or =none to gain increased speed, at
==3981013== the cost of reduced accuracy of conflicting-access information
==3981013== For lists of detected and suppressed errors, rerun with: -s
==3981013== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 114 from 14)
[1;32m‚úÖ PASSED[0m
[36m[B04][0m FIFO execution in single-thread mode... ==3981015== 
==3981015== Use --history-level=approx or =none to gain increased speed, at
==3981015== the cost of reduced accuracy of conflicting-access information
==3981015== For lists of detected and suppressed errors, rerun with: -s
==3981015== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 179 from 14)
[1;32m‚úÖ PASSED[0m
[32m[C01][0m Stress with 1000 tasks... ==3981017== 
==3981017== Use --history-level=approx or =none to gain increased speed, at
==3981017== the cost of reduced accuracy of conflicting-access information
==3981017== For lists of detected and suppressed errors, rerun with: -s
==3981017== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 9220 from 17)
[1;32m‚úÖ PASSED[0m
[32m[C02][0m Reusing the pool after wait... ==3981026== 
==3981026== Use --history-level=approx or =none to gain increased speed, at
==3981026== the cost of reduced accuracy of conflicting-access information
==3981026== For lists of detected and suppressed errors, rerun with: -s
==3981026== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 210 from 16)
[1;32m‚úÖ PASSED[0m
[32m[C03][0m Multiple wait() calls... ==3981031== 
==3981031== Use --history-level=approx or =none to gain increased speed, at
==3981031== the cost of reduced accuracy of conflicting-access information
==3981031== For lists of detected and suppressed errors, rerun with: -s
==3981031== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 152 from 16)
[1;32m‚úÖ PASSED[0m
[35m[E01][0m Massive stress (10k tasks)... ==3981036== 
==3981036== Use --history-level=approx or =none to gain increased speed, at
==3981036== the cost of reduced accuracy of conflicting-access information
==3981036== For lists of detected and suppressed errors, rerun with: -s
==3981036== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 90387 from 17)
[1;32m‚úÖ PASSED[0m
[35m[E02][0m Long tasks then shutdown... ==3981054== 
==3981054== Use --history-level=approx or =none to gain increased speed, at
==3981054== the cost of reduced accuracy of conflicting-access information
==3981054== For lists of detected and suppressed errors, rerun with: -s
==3981054== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 293 from 16)
[1;32m‚úÖ PASSED[0m
[35m[E03][0m Lots of short tasks on few threads... ==3981059== 
==3981059== Use --history-level=approx or =none to gain increased speed, at
==3981059== the cost of reduced accuracy of conflicting-access information
==3981059== For lists of detected and suppressed errors, rerun with: -s
==3981059== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2689 from 16)
[1;32m‚úÖ PASSED[0m
[35m[E04][0m Detect potential deadlock... ==3981062== ---Thread-Announcement------------------------------------------
==3981062== 
==3981062== Thread #2 was created
==3981062==    at 0x4C3FA23: clone (clone.S:76)
==3981062==    by 0x4C3FBA2: __clone_internal_fallback (clone-internal.c:64)
==3981062==    by 0x4C3FBA2: __clone_internal (clone-internal.c:109)
==3981062==    by 0x4BB254F: create_thread (pthread_create.c:297)
==3981062==    by 0x4BB31A4: pthread_create@@GLIBC_2.34 (pthread_create.c:836)
==3981062==    by 0x4854975: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==3981062==    by 0x4956EB0: std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33)
==3981062==    by 0x11A6A6: std::thread::thread<test_potential_deadlock()::{lambda()#1}, , void>(test_potential_deadlock()::{lambda()#1}&&) (std_thread.h:164)
==3981062==    by 0x11491F: test_potential_deadlock() (test_custom.cc:281)
==3981062==    by 0x12F1AE: bool std::__invoke_impl<bool, bool (*&)()>(std::__invoke_other, bool (*&)()) (invoke.h:61)
==3981062==    by 0x12DE4F: std::enable_if<!std::is_void<bool>::value, bool>::type std::__invoke_r<bool, bool (*&)()>(bool (*&)()) (invoke.h:138)
==3981062==    by 0x12C4FF: std::_Function_handler<bool (), bool (*)()>::_M_invoke(std::_Any_data const&) (std_function.h:290)
==3981062==    by 0x12A3C3: std::function<bool ()>::operator()() const (std_function.h:591)
==3981062== 
==3981062== ----------------------------------------------------------------
==3981062== 
==3981062== Thread #2: pthread_cond_{signal,broadcast}: dubious: associated lock is not held by any thread
==3981062==    at 0x4851C1D: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==3981062==    by 0x1147D0: test_potential_deadlock()::{lambda()#1}::operator()() const (test_custom.cc:275)
==3981062==    by 0x127461: void std::__invoke_impl<void, test_potential_deadlock()::{lambda()#1}>(std::__invoke_other, test_potential_deadlock()::{lambda()#1}&&) (invoke.h:61)
==3981062==    by 0x127185: std::__invoke_result<test_potential_deadlock()::{lambda()#1}>::type std::__invoke<test_potential_deadlock()::{lambda()#1}>(test_potential_deadlock()::{lambda()#1}&&) (invoke.h:96)
==3981062==    by 0x126DA1: void std::thread::_Invoker<std::tuple<test_potential_deadlock()::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (std_thread.h:292)
==3981062==    by 0x126B91: std::thread::_Invoker<std::tuple<test_potential_deadlock()::{lambda()#1}> >::operator()() (std_thread.h:299)
==3981062==    by 0x126A41: std::thread::_State_impl<std::thread::_Invoker<std::tuple<test_potential_deadlock()::{lambda()#1}> > >::_M_run() (std_thread.h:244)
==3981062==    by 0x4956DB3: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33)
==3981062==    by 0x4854B7A: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==3981062==    by 0x4BB2AA3: start_thread (pthread_create.c:447)
==3981062==    by 0x4C3FA33: clone (clone.S:100)
==3981062== 
==3981062== 
==3981062== Use --history-level=approx or =none to gain increased speed, at
==3981062== the cost of reduced accuracy of conflicting-access information
==3981062== For lists of detected and suppressed errors, rerun with: -s
==3981062== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 114 from 23)
[1;31m‚ùå FAILED[0m
[35m[E05][0m Simulated pendingTasks tracking... ==3981066== 
==3981066== Use --history-level=approx or =none to gain increased speed, at
==3981066== the cost of reduced accuracy of conflicting-access information
==3981066== For lists of detected and suppressed errors, rerun with: -s
==3981066== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 1463 from 16)
[1;32m‚úÖ PASSED[0m
[34m[F01][0m Schedule from multiple threads... ==3981071== 
==3981071== Use --history-level=approx or =none to gain increased speed, at
==3981071== the cost of reduced accuracy of conflicting-access information
==3981071== For lists of detected and suppressed errors, rerun with: -s
==3981071== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 31886 from 16)
[1;32m‚úÖ PASSED[0m
[34m[F02][0m Schedule after destruction (invalid use)... ==3981084== 
==3981084== Use --history-level=approx or =none to gain increased speed, at
==3981084== the cost of reduced accuracy of conflicting-access information
==3981084== For lists of detected and suppressed errors, rerun with: -s
==3981084== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 102 from 16)
[1;32m‚úÖ PASSED[0m
[34m[F03][0m Schedule inside another task... ==3981088== 
==3981088== Use --history-level=approx or =none to gain increased speed, at
==3981088== the cost of reduced accuracy of conflicting-access information
==3981088== For lists of detected and suppressed errors, rerun with: -s
==3981088== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 153 from 14)
[1;32m‚úÖ PASSED[0m
[34m[F04][0m Wait blocks until all tasks finish... ==3981093== 
==3981093== Use --history-level=approx or =none to gain increased speed, at
==3981093== the cost of reduced accuracy of conflicting-access information
==3981093== For lists of detected and suppressed errors, rerun with: -s
==3981093== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 102 from 16)
[1;32m‚úÖ PASSED[0m
[34m[F06][0m Many waits in parallel... ==3981096== 
==3981096== Use --history-level=approx or =none to gain increased speed, at
==3981096== the cost of reduced accuracy of conflicting-access information
==3981096== For lists of detected and suppressed errors, rerun with: -s
==3981096== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 869 from 16)
[1;32m‚úÖ PASSED[0m
[34m[F07][0m High contention on atomic counter... ==3981106== 
==3981106== Use --history-level=approx or =none to gain increased speed, at
==3981106== the cost of reduced accuracy of conflicting-access information
==3981106== For lists of detected and suppressed errors, rerun with: -s
==3981106== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 9136 from 16)
[1;32m‚úÖ PASSED[0m
[34m[F08][0m Destroy pool immediately after scheduling... ==3981111== 
==3981111== Use --history-level=approx or =none to gain increased speed, at
==3981111== the cost of reduced accuracy of conflicting-access information
==3981111== For lists of detected and suppressed errors, rerun with: -s
==3981111== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 168 from 13)
[1;32m‚úÖ PASSED[0m
[34m[F09][0m Interleaved schedule/wait execution... ==3981114== 
==3981114== Use --history-level=approx or =none to gain increased speed, at
==3981114== the cost of reduced accuracy of conflicting-access information
==3981114== For lists of detected and suppressed errors, rerun with: -s
==3981114== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 1254 from 21)
[1;32m‚úÖ PASSED[0m
[34m[F10][0m Multiple schedule/wait rounds... ==3981118== 
==3981118== Use --history-level=approx or =none to gain increased speed, at
==3981118== the cost of reduced accuracy of conflicting-access information
==3981118== For lists of detected and suppressed errors, rerun with: -s
==3981118== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[1;32m‚úÖ PASSED[0m
[34m[F11][0m Multiple wait() calls inside tasks... ==3981119== 
==3981119== Use --history-level=approx or =none to gain increased speed, at
==3981119== the cost of reduced accuracy of conflicting-access information
==3981119== For lists of detected and suppressed errors, rerun with: -s
==3981119== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[1;32m‚úÖ PASSED[0m
[34m[F12][0m Concurrent schedule/wait in parallel... ==3981120== 
==3981120== Use --history-level=approx or =none to gain increased speed, at
==3981120== the cost of reduced accuracy of conflicting-access information
==3981120== For lists of detected and suppressed errors, rerun with: -s
==3981120== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 4447 from 16)
[1;32m‚úÖ PASSED[0m
[31m[H01][0m Wait inside task should deadlock... ==3981131== 
==3981131== Use --history-level=approx or =none to gain increased speed, at
==3981131== the cost of reduced accuracy of conflicting-access information
==3981131== For lists of detected and suppressed errors, rerun with: -s
==3981131== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[1;32m‚úÖ PASSED[0m
[33m[L01][0m Destructor waits for tasks completion... ==3981132== 
==3981132== Use --history-level=approx or =none to gain increased speed, at
==3981132== the cost of reduced accuracy of conflicting-access information
==3981132== For lists of detected and suppressed errors, rerun with: -s
==3981132== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 20 from 11)
[1;32m‚úÖ PASSED[0m
[33m[L02][0m Repeated pool creation and destruction... ==3981134== 
==3981134== Use --history-level=approx or =none to gain increased speed, at
==3981134== the cost of reduced accuracy of conflicting-access information
==3981134== For lists of detected and suppressed errors, rerun with: -s
==3981134== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 17137 from 16)
[1;32m‚úÖ PASSED[0m
[91m[M01][0m Schedule nullptr function... ==3981335== 
==3981335== Use --history-level=approx or =none to gain increased speed, at
==3981335== the cost of reduced accuracy of conflicting-access information
==3981335== For lists of detected and suppressed errors, rerun with: -s
==3981335== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 38 from 13)
[1;32m‚úÖ PASSED[0m
[91m[M02][0m wait() during infinite rescheduling... ==3981338== 
==3981338== Use --history-level=approx or =none to gain increased speed, at
==3981338== the cost of reduced accuracy of conflicting-access information
==3981338== For lists of detected and suppressed errors, rerun with: -s
==3981338== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[1;32m‚úÖ PASSED[0m
[96m[N01][0m Deep nested task scheduling... ==3981339== 
==3981339== Use --history-level=approx or =none to gain increased speed, at
==3981339== the cost of reduced accuracy of conflicting-access information
==3981339== For lists of detected and suppressed errors, rerun with: -s
==3981339== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 182 from 23)
[1;32m‚úÖ PASSED[0m
[96m[N02][0m Extreme nested scheduling (1000)... ==3981345== 
==3981345== Use --history-level=approx or =none to gain increased speed, at
==3981345== the cost of reduced accuracy of conflicting-access information
==3981345== For lists of detected and suppressed errors, rerun with: -s
==3981345== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 16134 from 23)
[1;32m‚úÖ PASSED[0m
[95m[T01][0m Parallel speedup benchmark (4 tasks)... ==3981351== 
==3981351== Use --history-level=approx or =none to gain increased speed, at
==3981351== the cost of reduced accuracy of conflicting-access information
==3981351== For lists of detected and suppressed errors, rerun with: -s
==3981351== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 215 from 16)
[1;32m‚úÖ PASSED[0m

========================================
Ran 31 tests.
‚ùå SOME TESTS FAILED
========================================
==3981004== 
==3981004== Use --history-level=approx or =none to gain increased speed, at
==3981004== the cost of reduced accuracy of conflicting-access information
==3981004== For lists of detected and suppressed errors, rerun with: -s
==3981004== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
