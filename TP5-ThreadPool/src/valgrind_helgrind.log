==25608== Helgrind, a thread error detector
==25608== Copyright (C) 2007-2017, and GNU GPL'd, by OpenWorks LLP et al.
==25608== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info
==25608== Command: ./threadpool --all
==25608== 
[36m[B01][0m Basic execution (3 tasks on 2 threads)... ==25609== 
==25609== Use --history-level=approx or =none to gain increased speed, at
==25609== the cost of reduced accuracy of conflicting-access information
==25609== For lists of detected and suppressed errors, rerun with: -s
==25609== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 107 from 16)
[1;32m‚úÖ PASSED[0m
[36m[B02][0m Wait without scheduling... ==25612== 
==25612== Use --history-level=approx or =none to gain increased speed, at
==25612== the cost of reduced accuracy of conflicting-access information
==25612== For lists of detected and suppressed errors, rerun with: -s
==25612== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 87 from 13)
[1;32m‚úÖ PASSED[0m
[36m[B03][0m Serial execution with 1 thread... ==25617== 
==25617== Use --history-level=approx or =none to gain increased speed, at
==25617== the cost of reduced accuracy of conflicting-access information
==25617== For lists of detected and suppressed errors, rerun with: -s
==25617== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 114 from 14)
[1;32m‚úÖ PASSED[0m
[36m[B04][0m FIFO execution in single-thread mode... ==25619== 
==25619== Use --history-level=approx or =none to gain increased speed, at
==25619== the cost of reduced accuracy of conflicting-access information
==25619== For lists of detected and suppressed errors, rerun with: -s
==25619== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 179 from 14)
[1;32m‚úÖ PASSED[0m
[32m[C01][0m Stress with 1000 tasks... ==25621== 
==25621== Use --history-level=approx or =none to gain increased speed, at
==25621== the cost of reduced accuracy of conflicting-access information
==25621== For lists of detected and suppressed errors, rerun with: -s
==25621== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 9235 from 17)
[1;32m‚úÖ PASSED[0m
[32m[C02][0m Reusing the pool after wait... ==25630== 
==25630== Use --history-level=approx or =none to gain increased speed, at
==25630== the cost of reduced accuracy of conflicting-access information
==25630== For lists of detected and suppressed errors, rerun with: -s
==25630== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 210 from 16)
[1;32m‚úÖ PASSED[0m
[32m[C03][0m Multiple wait() calls... ==25635== 
==25635== Use --history-level=approx or =none to gain increased speed, at
==25635== the cost of reduced accuracy of conflicting-access information
==25635== For lists of detected and suppressed errors, rerun with: -s
==25635== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 152 from 16)
[1;32m‚úÖ PASSED[0m
[35m[E01][0m Massive stress (10k tasks)... ==25640== 
==25640== Use --history-level=approx or =none to gain increased speed, at
==25640== the cost of reduced accuracy of conflicting-access information
==25640== For lists of detected and suppressed errors, rerun with: -s
==25640== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 90507 from 17)
[1;32m‚úÖ PASSED[0m
[35m[E02][0m Long tasks then shutdown... ==25658== 
==25658== Use --history-level=approx or =none to gain increased speed, at
==25658== the cost of reduced accuracy of conflicting-access information
==25658== For lists of detected and suppressed errors, rerun with: -s
==25658== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 293 from 16)
[1;32m‚úÖ PASSED[0m
[35m[E03][0m Lots of short tasks on few threads... ==25663== 
==25663== Use --history-level=approx or =none to gain increased speed, at
==25663== the cost of reduced accuracy of conflicting-access information
==25663== For lists of detected and suppressed errors, rerun with: -s
==25663== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2689 from 16)
[1;32m‚úÖ PASSED[0m
[35m[E04][0m Detect potential deadlock... ==25666== ---Thread-Announcement------------------------------------------
==25666== 
==25666== Thread #2 was created
==25666==    at 0x4C3FA23: clone (clone.S:76)
==25666==    by 0x4C3FBA2: __clone_internal_fallback (clone-internal.c:64)
==25666==    by 0x4C3FBA2: __clone_internal (clone-internal.c:109)
==25666==    by 0x4BB254F: create_thread (pthread_create.c:297)
==25666==    by 0x4BB31A4: pthread_create@@GLIBC_2.34 (pthread_create.c:836)
==25666==    by 0x4854975: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==25666==    by 0x4956EB0: std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33)
==25666==    by 0x11A6A6: std::thread::thread<test_potential_deadlock()::{lambda()#1}, , void>(test_potential_deadlock()::{lambda()#1}&&) (std_thread.h:164)
==25666==    by 0x11491F: test_potential_deadlock() (test_custom.cc:280)
==25666==    by 0x12F1AE: bool std::__invoke_impl<bool, bool (*&)()>(std::__invoke_other, bool (*&)()) (invoke.h:61)
==25666==    by 0x12DE4F: std::enable_if<!std::is_void<bool>::value, bool>::type std::__invoke_r<bool, bool (*&)()>(bool (*&)()) (invoke.h:138)
==25666==    by 0x12C4FF: std::_Function_handler<bool (), bool (*)()>::_M_invoke(std::_Any_data const&) (std_function.h:290)
==25666==    by 0x12A3C3: std::function<bool ()>::operator()() const (std_function.h:591)
==25666== 
==25666== ----------------------------------------------------------------
==25666== 
==25666== Thread #2: pthread_cond_{signal,broadcast}: dubious: associated lock is not held by any thread
==25666==    at 0x4851C1D: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==25666==    by 0x1147D0: test_potential_deadlock()::{lambda()#1}::operator()() const (test_custom.cc:274)
==25666==    by 0x127461: void std::__invoke_impl<void, test_potential_deadlock()::{lambda()#1}>(std::__invoke_other, test_potential_deadlock()::{lambda()#1}&&) (invoke.h:61)
==25666==    by 0x127185: std::__invoke_result<test_potential_deadlock()::{lambda()#1}>::type std::__invoke<test_potential_deadlock()::{lambda()#1}>(test_potential_deadlock()::{lambda()#1}&&) (invoke.h:96)
==25666==    by 0x126DA1: void std::thread::_Invoker<std::tuple<test_potential_deadlock()::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (std_thread.h:292)
==25666==    by 0x126B91: std::thread::_Invoker<std::tuple<test_potential_deadlock()::{lambda()#1}> >::operator()() (std_thread.h:299)
==25666==    by 0x126A41: std::thread::_State_impl<std::thread::_Invoker<std::tuple<test_potential_deadlock()::{lambda()#1}> > >::_M_run() (std_thread.h:244)
==25666==    by 0x4956DB3: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33)
==25666==    by 0x4854B7A: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==25666==    by 0x4BB2AA3: start_thread (pthread_create.c:447)
==25666==    by 0x4C3FA33: clone (clone.S:100)
==25666== 
==25666== 
==25666== Use --history-level=approx or =none to gain increased speed, at
==25666== the cost of reduced accuracy of conflicting-access information
==25666== For lists of detected and suppressed errors, rerun with: -s
==25666== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 114 from 23)
[1;31m‚ùå FAILED[0m
[35m[E05][0m Simulated pendingTasks tracking... ==25670== 
==25670== Use --history-level=approx or =none to gain increased speed, at
==25670== the cost of reduced accuracy of conflicting-access information
==25670== For lists of detected and suppressed errors, rerun with: -s
==25670== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 1463 from 16)
[1;32m‚úÖ PASSED[0m
[34m[F01][0m Schedule from multiple threads... ==25675== 
==25675== Use --history-level=approx or =none to gain increased speed, at
==25675== the cost of reduced accuracy of conflicting-access information
==25675== For lists of detected and suppressed errors, rerun with: -s
==25675== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 19822 from 16)
[1;32m‚úÖ PASSED[0m
[34m[F02][0m Schedule after destruction (invalid use)... ==25688== 
==25688== Use --history-level=approx or =none to gain increased speed, at
==25688== the cost of reduced accuracy of conflicting-access information
==25688== For lists of detected and suppressed errors, rerun with: -s
==25688== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 102 from 16)
[1;32m‚úÖ PASSED[0m
[34m[F03][0m Schedule inside another task... ==25691== 
==25691== Use --history-level=approx or =none to gain increased speed, at
==25691== the cost of reduced accuracy of conflicting-access information
==25691== For lists of detected and suppressed errors, rerun with: -s
==25691== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 149 from 14)
[1;32m‚úÖ PASSED[0m
[34m[F04][0m Wait blocks until all tasks finish... ==25696== 
==25696== Use --history-level=approx or =none to gain increased speed, at
==25696== the cost of reduced accuracy of conflicting-access information
==25696== For lists of detected and suppressed errors, rerun with: -s
==25696== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 102 from 16)
[1;32m‚úÖ PASSED[0m
[34m[F06][0m Many waits in parallel... ==25699== 
==25699== Use --history-level=approx or =none to gain increased speed, at
==25699== the cost of reduced accuracy of conflicting-access information
==25699== For lists of detected and suppressed errors, rerun with: -s
==25699== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 869 from 16)
[1;32m‚úÖ PASSED[0m
[34m[F07][0m High contention on atomic counter... ==25709== 
==25709== Use --history-level=approx or =none to gain increased speed, at
==25709== the cost of reduced accuracy of conflicting-access information
==25709== For lists of detected and suppressed errors, rerun with: -s
==25709== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 9136 from 16)
[1;32m‚úÖ PASSED[0m
[34m[F08][0m Destroy pool immediately after scheduling... ==25714== 
==25714== Use --history-level=approx or =none to gain increased speed, at
==25714== the cost of reduced accuracy of conflicting-access information
==25714== For lists of detected and suppressed errors, rerun with: -s
==25714== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 168 from 13)
[1;32m‚úÖ PASSED[0m
[34m[F09][0m Interleaved schedule/wait execution... ==25726== 
==25726== Use --history-level=approx or =none to gain increased speed, at
==25726== the cost of reduced accuracy of conflicting-access information
==25726== For lists of detected and suppressed errors, rerun with: -s
==25726== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 1254 from 21)
[1;32m‚úÖ PASSED[0m
[34m[F10][0m Multiple schedule/wait rounds... ==25731== 
==25731== Use --history-level=approx or =none to gain increased speed, at
==25731== the cost of reduced accuracy of conflicting-access information
==25731== For lists of detected and suppressed errors, rerun with: -s
==25731== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[1;32m‚úÖ PASSED[0m
[34m[F11][0m Multiple wait() calls inside tasks... ==25732== 
==25732== Use --history-level=approx or =none to gain increased speed, at
==25732== the cost of reduced accuracy of conflicting-access information
==25732== For lists of detected and suppressed errors, rerun with: -s
==25732== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[1;32m‚úÖ PASSED[0m
[34m[F12][0m Concurrent schedule/wait in parallel... ==25733== 
==25733== Use --history-level=approx or =none to gain increased speed, at
==25733== the cost of reduced accuracy of conflicting-access information
==25733== For lists of detected and suppressed errors, rerun with: -s
==25733== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 4447 from 16)
[1;32m‚úÖ PASSED[0m
[31m[H01][0m Wait inside task should deadlock... ==25744== 
==25744== Use --history-level=approx or =none to gain increased speed, at
==25744== the cost of reduced accuracy of conflicting-access information
==25744== For lists of detected and suppressed errors, rerun with: -s
==25744== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[1;32m‚úÖ PASSED[0m
[33m[L01][0m Destructor waits for tasks completion... ==25745== 
==25745== Use --history-level=approx or =none to gain increased speed, at
==25745== the cost of reduced accuracy of conflicting-access information
==25745== For lists of detected and suppressed errors, rerun with: -s
==25745== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 20 from 11)
[1;32m‚úÖ PASSED[0m
[33m[L02][0m Repeated pool creation and destruction... ==25747== 
==25747== Use --history-level=approx or =none to gain increased speed, at
==25747== the cost of reduced accuracy of conflicting-access information
==25747== For lists of detected and suppressed errors, rerun with: -s
==25747== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 17061 from 16)
[1;32m‚úÖ PASSED[0m
[91m[M01][0m Schedule nullptr function... ==25948== 
==25948== Use --history-level=approx or =none to gain increased speed, at
==25948== the cost of reduced accuracy of conflicting-access information
==25948== For lists of detected and suppressed errors, rerun with: -s
==25948== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 38 from 13)
[1;32m‚úÖ PASSED[0m
[91m[M02][0m wait() during infinite rescheduling... ==25951== 
==25951== Use --history-level=approx or =none to gain increased speed, at
==25951== the cost of reduced accuracy of conflicting-access information
==25951== For lists of detected and suppressed errors, rerun with: -s
==25951== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[1;32m‚úÖ PASSED[0m
[96m[N01][0m Deep nested task scheduling... ==25952== 
==25952== Use --history-level=approx or =none to gain increased speed, at
==25952== the cost of reduced accuracy of conflicting-access information
==25952== For lists of detected and suppressed errors, rerun with: -s
==25952== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 182 from 23)
[1;32m‚úÖ PASSED[0m
[96m[N02][0m Extreme nested scheduling (1000)... ==25958== 
==25958== Use --history-level=approx or =none to gain increased speed, at
==25958== the cost of reduced accuracy of conflicting-access information
==25958== For lists of detected and suppressed errors, rerun with: -s
==25958== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 7129 from 22)
[1;32m‚úÖ PASSED[0m
[95m[T01][0m Parallel speedup benchmark (4 tasks)... ==25964== 
==25964== Use --history-level=approx or =none to gain increased speed, at
==25964== the cost of reduced accuracy of conflicting-access information
==25964== For lists of detected and suppressed errors, rerun with: -s
==25964== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 215 from 16)
[1;32m‚úÖ PASSED[0m

========================================
Ran 31 tests.
‚ùå SOME TESTS FAILED
========================================
==25608== 
==25608== Use --history-level=approx or =none to gain increased speed, at
==25608== the cost of reduced accuracy of conflicting-access information
==25608== For lists of detected and suppressed errors, rerun with: -s
==25608== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
