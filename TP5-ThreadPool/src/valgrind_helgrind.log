==30230== Helgrind, a thread error detector
==30230== Copyright (C) 2007-2017, and GNU GPL'd, by OpenWorks LLP et al.
==30230== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info
==30230== Command: ./threadpool --all
==30230== 
[36m[B01][0m Basic execution (3 tasks on 2 threads)... ==30297== 
==30297== Use --history-level=approx or =none to gain increased speed, at
==30297== the cost of reduced accuracy of conflicting-access information
==30297== For lists of detected and suppressed errors, rerun with: -s
==30297== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 103 from 16)
[1;32m‚úÖ PASSED[0m
[36m[B02][0m Wait without scheduling... ==30300== 
==30300== Use --history-level=approx or =none to gain increased speed, at
==30300== the cost of reduced accuracy of conflicting-access information
==30300== For lists of detected and suppressed errors, rerun with: -s
==30300== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 83 from 13)
[1;32m‚úÖ PASSED[0m
[36m[B03][0m Serial execution with 1 thread... ==30305== 
==30305== Use --history-level=approx or =none to gain increased speed, at
==30305== the cost of reduced accuracy of conflicting-access information
==30305== For lists of detected and suppressed errors, rerun with: -s
==30305== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 110 from 14)
[1;32m‚úÖ PASSED[0m
[36m[B04][0m FIFO execution in single-thread mode... ==30307== 
==30307== Use --history-level=approx or =none to gain increased speed, at
==30307== the cost of reduced accuracy of conflicting-access information
==30307== For lists of detected and suppressed errors, rerun with: -s
==30307== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 175 from 14)
[1;32m‚úÖ PASSED[0m
[32m[C01][0m Stress with 1000 tasks... ==30309== 
==30309== Use --history-level=approx or =none to gain increased speed, at
==30309== the cost of reduced accuracy of conflicting-access information
==30309== For lists of detected and suppressed errors, rerun with: -s
==30309== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 9216 from 17)
[1;32m‚úÖ PASSED[0m
[32m[C02][0m Reusing the pool after wait... ==30318== 
==30318== Use --history-level=approx or =none to gain increased speed, at
==30318== the cost of reduced accuracy of conflicting-access information
==30318== For lists of detected and suppressed errors, rerun with: -s
==30318== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 202 from 16)
[1;32m‚úÖ PASSED[0m
[32m[C03][0m Multiple wait() calls... ==30327== 
==30327== Use --history-level=approx or =none to gain increased speed, at
==30327== the cost of reduced accuracy of conflicting-access information
==30327== For lists of detected and suppressed errors, rerun with: -s
==30327== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 144 from 16)
[1;32m‚úÖ PASSED[0m
[35m[E01][0m Massive stress (10k tasks)... ==30332== 
==30332== Use --history-level=approx or =none to gain increased speed, at
==30332== the cost of reduced accuracy of conflicting-access information
==30332== For lists of detected and suppressed errors, rerun with: -s
==30332== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 90377 from 17)
[1;32m‚úÖ PASSED[0m
[35m[E02][0m Long tasks then shutdown... ==30417== 
==30417== Use --history-level=approx or =none to gain increased speed, at
==30417== the cost of reduced accuracy of conflicting-access information
==30417== For lists of detected and suppressed errors, rerun with: -s
==30417== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 289 from 16)
[1;32m‚úÖ PASSED[0m
[35m[E03][0m Lots of short tasks on few threads... ==30767== 
==30767== Use --history-level=approx or =none to gain increased speed, at
==30767== the cost of reduced accuracy of conflicting-access information
==30767== For lists of detected and suppressed errors, rerun with: -s
==30767== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2685 from 16)
[1;32m‚úÖ PASSED[0m
[35m[E04][0m Detect potential deadlock... ==30771== ---Thread-Announcement------------------------------------------
==30771== 
==30771== Thread #2 was created
==30771==    at 0x4C3FA23: clone (clone.S:76)
==30771==    by 0x4C3FBA2: __clone_internal_fallback (clone-internal.c:64)
==30771==    by 0x4C3FBA2: __clone_internal (clone-internal.c:109)
==30771==    by 0x4BB254F: create_thread (pthread_create.c:297)
==30771==    by 0x4BB31A4: pthread_create@@GLIBC_2.34 (pthread_create.c:836)
==30771==    by 0x4854975: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==30771==    by 0x4956EB0: std::thread::_M_start_thread(std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >, void (*)()) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33)
==30771==    by 0x11A65E: std::thread::thread<test_potential_deadlock()::{lambda()#1}, , void>(test_potential_deadlock()::{lambda()#1}&&) (std_thread.h:164)
==30771==    by 0x1148D7: test_potential_deadlock() (test_custom.cc:280)
==30771==    by 0x12F166: bool std::__invoke_impl<bool, bool (*&)()>(std::__invoke_other, bool (*&)()) (invoke.h:61)
==30771==    by 0x12DE07: std::enable_if<!std::is_void<bool>::value, bool>::type std::__invoke_r<bool, bool (*&)()>(bool (*&)()) (invoke.h:138)
==30771==    by 0x12C4B7: std::_Function_handler<bool (), bool (*)()>::_M_invoke(std::_Any_data const&) (std_function.h:290)
==30771==    by 0x12A37B: std::function<bool ()>::operator()() const (std_function.h:591)
==30771== 
==30771== ----------------------------------------------------------------
==30771== 
==30771== Thread #2: pthread_cond_{signal,broadcast}: dubious: associated lock is not held by any thread
==30771==    at 0x4851C1D: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==30771==    by 0x114788: test_potential_deadlock()::{lambda()#1}::operator()() const (test_custom.cc:274)
==30771==    by 0x127419: void std::__invoke_impl<void, test_potential_deadlock()::{lambda()#1}>(std::__invoke_other, test_potential_deadlock()::{lambda()#1}&&) (invoke.h:61)
==30771==    by 0x12713D: std::__invoke_result<test_potential_deadlock()::{lambda()#1}>::type std::__invoke<test_potential_deadlock()::{lambda()#1}>(test_potential_deadlock()::{lambda()#1}&&) (invoke.h:96)
==30771==    by 0x126D59: void std::thread::_Invoker<std::tuple<test_potential_deadlock()::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (std_thread.h:292)
==30771==    by 0x126B49: std::thread::_Invoker<std::tuple<test_potential_deadlock()::{lambda()#1}> >::operator()() (std_thread.h:299)
==30771==    by 0x1269F9: std::thread::_State_impl<std::thread::_Invoker<std::tuple<test_potential_deadlock()::{lambda()#1}> > >::_M_run() (std_thread.h:244)
==30771==    by 0x4956DB3: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.33)
==30771==    by 0x4854B7A: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==30771==    by 0x4BB2AA3: start_thread (pthread_create.c:447)
==30771==    by 0x4C3FA33: clone (clone.S:100)
==30771== 
==30771== 
==30771== Use --history-level=approx or =none to gain increased speed, at
==30771== the cost of reduced accuracy of conflicting-access information
==30771== For lists of detected and suppressed errors, rerun with: -s
==30771== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 114 from 23)
[1;31m‚ùå FAILED[0m
[35m[E05][0m Simulated pendingTasks tracking... ==30782== 
==30782== Use --history-level=approx or =none to gain increased speed, at
==30782== the cost of reduced accuracy of conflicting-access information
==30782== For lists of detected and suppressed errors, rerun with: -s
==30782== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 1459 from 16)
[1;32m‚úÖ PASSED[0m
[34m[F01][0m Schedule from multiple threads... ==30792== 
==30792== Use --history-level=approx or =none to gain increased speed, at
==30792== the cost of reduced accuracy of conflicting-access information
==30792== For lists of detected and suppressed errors, rerun with: -s
==30792== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 20970 from 17)
[1;32m‚úÖ PASSED[0m
[34m[F02][0m Schedule after destruction (invalid use)... ==30813== 
==30813== Use --history-level=approx or =none to gain increased speed, at
==30813== the cost of reduced accuracy of conflicting-access information
==30813== For lists of detected and suppressed errors, rerun with: -s
==30813== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 98 from 16)
[1;32m‚úÖ PASSED[0m
[34m[F03][0m Schedule inside another task... ==30821== 
==30821== Use --history-level=approx or =none to gain increased speed, at
==30821== the cost of reduced accuracy of conflicting-access information
==30821== For lists of detected and suppressed errors, rerun with: -s
==30821== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 145 from 14)
[1;32m‚úÖ PASSED[0m
[34m[F04][0m Wait blocks until all tasks finish... ==30826== 
==30826== Use --history-level=approx or =none to gain increased speed, at
==30826== the cost of reduced accuracy of conflicting-access information
==30826== For lists of detected and suppressed errors, rerun with: -s
==30826== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 98 from 16)
[1;32m‚úÖ PASSED[0m
[34m[F06][0m Many waits in parallel... ==30839== 
==30839== Use --history-level=approx or =none to gain increased speed, at
==30839== the cost of reduced accuracy of conflicting-access information
==30839== For lists of detected and suppressed errors, rerun with: -s
==30839== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 905 from 16)
[1;32m‚úÖ PASSED[0m
[34m[F07][0m High contention on atomic counter... ==30856== 
==30856== Use --history-level=approx or =none to gain increased speed, at
==30856== the cost of reduced accuracy of conflicting-access information
==30856== For lists of detected and suppressed errors, rerun with: -s
==30856== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 9132 from 16)
[1;32m‚úÖ PASSED[0m
[34m[F08][0m Destroy pool immediately after scheduling... ==30869== 
==30869== Use --history-level=approx or =none to gain increased speed, at
==30869== the cost of reduced accuracy of conflicting-access information
==30869== For lists of detected and suppressed errors, rerun with: -s
==30869== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 168 from 13)
[1;32m‚úÖ PASSED[0m
[34m[F09][0m Interleaved schedule/wait execution... ==30878== 
==30878== Use --history-level=approx or =none to gain increased speed, at
==30878== the cost of reduced accuracy of conflicting-access information
==30878== For lists of detected and suppressed errors, rerun with: -s
==30878== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 1214 from 21)
[1;32m‚úÖ PASSED[0m
[34m[F10][0m Multiple schedule/wait rounds... ==30882== 
==30882== Use --history-level=approx or =none to gain increased speed, at
==30882== the cost of reduced accuracy of conflicting-access information
==30882== For lists of detected and suppressed errors, rerun with: -s
==30882== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[1;32m‚úÖ PASSED[0m
[34m[F11][0m Multiple wait() calls inside tasks... ==30883== 
==30883== Use --history-level=approx or =none to gain increased speed, at
==30883== the cost of reduced accuracy of conflicting-access information
==30883== For lists of detected and suppressed errors, rerun with: -s
==30883== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[1;32m‚úÖ PASSED[0m
[34m[F12][0m Concurrent schedule/wait in parallel... ==30884== 
==30884== Use --history-level=approx or =none to gain increased speed, at
==30884== the cost of reduced accuracy of conflicting-access information
==30884== For lists of detected and suppressed errors, rerun with: -s
==30884== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 4465 from 16)
[1;32m‚úÖ PASSED[0m
[31m[H01][0m Wait inside task should deadlock... ==30895== 
==30895== Use --history-level=approx or =none to gain increased speed, at
==30895== the cost of reduced accuracy of conflicting-access information
==30895== For lists of detected and suppressed errors, rerun with: -s
==30895== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[1;32m‚úÖ PASSED[0m
[33m[L01][0m Destructor waits for tasks completion... ==30896== 
==30896== Use --history-level=approx or =none to gain increased speed, at
==30896== the cost of reduced accuracy of conflicting-access information
==30896== For lists of detected and suppressed errors, rerun with: -s
==30896== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 20 from 11)
[1;32m‚úÖ PASSED[0m
[33m[L02][0m Repeated pool creation and destruction... ==30898== 
==30898== Use --history-level=approx or =none to gain increased speed, at
==30898== the cost of reduced accuracy of conflicting-access information
==30898== For lists of detected and suppressed errors, rerun with: -s
==30898== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 16689 from 16)
[1;32m‚úÖ PASSED[0m
[91m[M01][0m Schedule nullptr function... ==31099== 
==31099== Use --history-level=approx or =none to gain increased speed, at
==31099== the cost of reduced accuracy of conflicting-access information
==31099== For lists of detected and suppressed errors, rerun with: -s
==31099== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 38 from 13)
[1;32m‚úÖ PASSED[0m
[91m[M02][0m wait() during infinite rescheduling... ==31102== 
==31102== Use --history-level=approx or =none to gain increased speed, at
==31102== the cost of reduced accuracy of conflicting-access information
==31102== For lists of detected and suppressed errors, rerun with: -s
==31102== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[1;32m‚úÖ PASSED[0m
[96m[N01][0m Deep nested task scheduling... ==31104== 
==31104== Use --history-level=approx or =none to gain increased speed, at
==31104== the cost of reduced accuracy of conflicting-access information
==31104== For lists of detected and suppressed errors, rerun with: -s
==31104== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 178 from 23)
[1;32m‚úÖ PASSED[0m
[96m[N02][0m Extreme nested scheduling (1000)... ==31113== 
==31113== Use --history-level=approx or =none to gain increased speed, at
==31113== the cost of reduced accuracy of conflicting-access information
==31113== For lists of detected and suppressed errors, rerun with: -s
==31113== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 16130 from 23)
[1;32m‚úÖ PASSED[0m
[95m[T01][0m Parallel speedup benchmark (4 tasks)... ==31121== 
==31121== Use --history-level=approx or =none to gain increased speed, at
==31121== the cost of reduced accuracy of conflicting-access information
==31121== For lists of detected and suppressed errors, rerun with: -s
==31121== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 211 from 16)
[1;32m‚úÖ PASSED[0m

========================================
Ran 31 tests.
‚ùå SOME TESTS FAILED
========================================
==30230== 
==30230== Use --history-level=approx or =none to gain increased speed, at
==30230== the cost of reduced accuracy of conflicting-access information
==30230== For lists of detected and suppressed errors, rerun with: -s
==30230== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
